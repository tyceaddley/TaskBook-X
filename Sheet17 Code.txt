Private Sub Worksheet_Change(ByVal Target As Range)
Dim a As String
Dim myCells As Range
Set myCells = Selection
'****************************************************************************************************
'HEADS UP DISPLAY UPDATER CODE
'****************************************************************************************************
'This code is for the top left heads up display and adjusting the values there
'****************************************************************************************************
'Sequencing Assays
'****************************************************************************************************
'sets the arrays to be used for which tests to be counted. Column B is used as a reference

seqNOrt = Array("IDH1-2", "CEBPA", "KIT AML", "EPOR", "IGHV")

seqRTassay = Array("IGHV")

seqassay = Array("IGHV", "IDH1-2", "CEBPA", "EPOR", "KIT AML")
'SeqRTVal will be the value count of how many assays need to have a "RT" step.

seqRPT = Application.Sum(Application.CountIfs(Range("C3:C200"), "*RPT*", Range("B3:B200"), seqNOrt))

seqRTRPT = Application.Sum(Application.CountIfs(Range("C3:C200"), "*RPT*", Range("B3:B200"), seqRTassay))

SeqRTVal = Application.Sum(Application.CountIf(Columns("B"), seqRTassay))

SeqRTVal = SeqRTVal - seqRTRPT

    If SeqRTVal > 0 Then 'if the value of the variable is greater than 0 the SeqRTPCR box will equal the count value.
        Sheet17.Shapes("SeqRTPCR").TextFrame.Characters.Text = SeqRTVal
    Else 'if no count value is found it'll be set to 0
        Sheet17.Shapes("SeqRTPCR").TextFrame.Characters.Text = 0
    End If
'counting the number of tests that need to be PCR'd and all assays fit this description.
sequencePCR = Application.Sum(Application.CountIf(Columns("B"), seqassay))
'count of only the assays requiring RT to bring in IGHV into one count variable moving forward
rtcount = Application.Sum(Application.CountIfs(Range("P3:P200"), "<>" & "", Range("B3:B200"), seqRTassay))
'RT count and the regular PCR count being combined in countminus variable.

sequencePCR = sequencePCR - seqRPT

countminus = sequencePCR - SeqRTVal

    If sequencePCR > 0 Then 'sets the SeqPCR box equal to the new combined variable countminus.
        Sheet17.Shapes("SeqPCR").TextFrame.Characters.Text = countminus
    Else
        Sheet17.Shapes("SeqPCR").TextFrame.Characters.Text = 0
    End If
    
    If rtcount > 0 Then 'rtcount is used as a variable for the number of assays in process which use an RT process.
        Sheet17.Shapes("SeqPCR").TextFrame.Characters.Text = countminus + rtcount
        SeqRTVal = SeqRTVal - rtcount
        Sheet17.Shapes("SeqRTPCR").TextFrame.Characters.Text = SeqRTVal
    Else
        Sheet17.Shapes("SeqPCR").TextFrame.Characters.Text = countminus 'countminus is the new base value instead of 0 because of combined value counts.
    End If
egeneready = countminus + rtcount 'creating a specific egene variable which is needed for all tests.

regulPCR = Application.Sum(Application.CountIfs(Range("G3:G200"), "<>" & "", Range("B3:B200"), seqassay))

    If regulPCR > 0 Then
        Sheet17.Shapes("SeqEgene").TextFrame.Characters.Text = regulPCR
        egeneready = egeneready - regulPCR
        Sheet17.Shapes("SeqPCR").TextFrame.Characters.Text = egeneready
    Else
        Sheet17.Shapes("SeqEgene").TextFrame.Characters.Text = 0
    End If
'A similar pattern is used for the remaining tests. Creating a variable count and subtracting or added previous variables depending on need.
'This can be messy, but is more reliable than +1 or -1 because of the differing assay requirements.

seqPCRready = seqRTinit + SeqNOrtVal

seqegene = Application.Sum(Application.CountIfs(Range("Q3:Q200"), "<>" & "", Range("B3:B200"), seqassay))
    
    If seqegene > 0 Then
        Sheet17.Shapes("SeqClean").TextFrame.Characters.Text = seqegene
        regulPCR = regulPCR - seqegene
        Sheet17.Shapes("SeqEgene").TextFrame.Characters.Text = regulPCR
    Else
        Sheet17.Shapes("SeqClean").TextFrame.Characters.Text = 0
    End If

seqCleanup = Application.Sum(Application.CountIfs(Range("S3:S200"), "<>" & "", Range("B3:B200"), seqassay))

    If seqCleanup > 0 Then
        Sheet17.Shapes("SeqThirty").TextFrame.Characters.Text = seqCleanup
        seqegene = seqegene - seqCleanup
        Sheet17.Shapes("SeqClean").TextFrame.Characters.Text = seqegene
    Else
        Sheet17.Shapes("SeqThirty").TextFrame.Characters.Text = 0
    End If
    
seqLoad = Application.Sum(Application.CountIfs(Range("U3:U200"), "<>" & "", Range("B3:B200"), seqassay))
    
    If seqLoad > 0 Then
        Sheet17.Shapes("SeqAnalysis").TextFrame.Characters.Text = seqLoad
        seqCleanup = seqCleanup - seqLoad
        Sheet17.Shapes("SeqThirty").TextFrame.Characters.Text = seqCleanup
    Else
        Sheet17.Shapes("SeqAnalysis").TextFrame.Characters.Text = 0
    End If
    
seqAnalysis = Application.Sum(Application.CountIfs(Range("AC3:AC200"), "<>" & "", Range("B3:B200"), seqassay))

    If seqAnalysis > 0 Then
        Sheet17.Shapes("SeqAnalysis").TextFrame.Characters.Text = seqLoad - seqAnalysis
    End If
'*********************************************************************************************************
' Capillary Tests
'*********************************************************************************************************

capassay = Array("CALR", "B CELL", "KIT AML", "T CELL", "FLT3 PCR", _
         "KIT GLV", "KIT D816V", "MPL", "MSI PCR")
         
capDIassay = Array("FLT3 PCR")

capNDassay = Array("CALR", "B CELL", "KIT AML", "T CELL", _
             "MPL", "KIT GLV", "KIT D816V", "MSI PCR")

cap3730assay = Array("KIT D816V", "MPL")

cap3730analysis = Array("KIT D816V", "MPL", "FLT3 PCR")

cap3500assay = Array("CALR", "B CELL", "KIT AML", "T CELL", "KIT GLV", "MSI PCR")

capRPT = Application.Sum(Application.CountIfs(Range("C3:C200"), "*RPT*", Range("B3:B200"), capassay))

CapVal = Application.Sum(Application.CountIf(Columns("B"), capassay))

CapVal = CapVal - capRPT

    If CapVal > 0 Then
        Sheet17.Shapes("CapPCR").TextFrame.Characters.Text = CapVal
    Else
        Sheet17.Shapes("CapPCR").TextFrame.Characters.Text = 0
    End If
    
capDigest = Application.Sum(Application.CountIfs(Range("G3:G200"), "<>" & "", Range("B3:B200"), capDIassay))
capReg = Application.Sum(Application.CountIfs(Range("G3:G200"), "<>" & "", Range("B3:B200"), capNDassay))

    If capDigest > 0 Then
        Sheet17.Shapes("CapDigest").TextFrame.Characters.Text = capDigest
        CapVal = CapVal - capDigest
        Sheet17.Shapes("CapPCR").TextFrame.Characters.Text = CapVal
    Else
        Sheet17.Shapes("CapDigest").TextFrame.Characters.Text = 0
    End If
    
cap3730 = Application.Sum(Application.CountIfs(Range("G3:G200"), "<>" & "", Range("B3:B200"), cap3730assay))
cap3500 = Application.Sum(Application.CountIfs(Range("G3:G200"), "<>" & "", Range("B3:B200"), cap3500assay))
capDIGcount = Application.Sum(Application.CountIfs(Range("H3:H200"), "<>" & "", Range("B3:B200"), capDIassay))
ready3730 = capDIGcount + cap3730

    If capDIGcount > 0 Then
        Sheet17.Shapes("CapThirty").TextFrame.Characters.Text = ready3730
        capDigest = capDigest - capDIGcount
        Sheet17.Shapes("CapDigest").TextFrame.Characters.Text = capDigest
    Else
        Sheet17.Shapes("CapThirty").TextFrame.Characters.Text = 0
    End If
    
    If cap3500 > 0 Then
        Sheet17.Shapes("CapFive").TextFrame.Characters.Text = cap3500
        CapVal = CapVal - cap3500
        Sheet17.Shapes("CapPCR").TextFrame.Characters.Text = CapVal
    Else
        Sheet17.Shapes("CapFive").TextFrame.Characters.Text = 0
    End If
    
    If cap3730 > 0 Then
        Sheet17.Shapes("CapThirty").TextFrame.Characters.Text = ready3730
        CapVal = CapVal - cap3730
        Sheet17.Shapes("CapPCR").TextFrame.Characters.Text = CapVal
    Else
        Sheet17.Shapes("CapThirty").TextFrame.Characters.Text = 0
    End If
    
capana = Application.Sum(Application.CountIfs(Range("I3:I200"), "<>" & "", Range("B3:B200"), capassay))
cap3730ana = Application.Sum(Application.CountIfs(Range("I3:I200"), "<>" & "", Range("B3:B200"), cap3730analysis))
cap3500ana = Application.Sum(Application.CountIfs(Range("I3:I200"), "<>" & "", Range("B3:B200"), cap3500assay))

    If capana > 0 Then
        Sheet17.Shapes("CapAnalysis").TextFrame.Characters.Text = capana
        cap3500 = cap3500 - cap3500ana
        ready3730 = ready3730 - cap3730ana
        Sheet17.Shapes("CapFive").TextFrame.Characters.Text = cap3500
        Sheet17.Shapes("CapThirty").TextFrame.Characters.Text = ready3730
    Else
        Sheet17.Shapes("CapAnalysis").TextFrame.Characters.Text = 0
    End If
    
CapAnalysis = Application.Sum(Application.CountIfs(Range("AC3:AC200"), "<>" & "", Range("B3:B200"), capassay))

    If CapAnalysis > 0 Then
        Sheet17.Shapes("CapAnalysis").TextFrame.Characters.Text = capana - CapAnalysis
    End If
'*********************************************************************************************************
'Digital Droplet
'*********************************************************************************************************
digassay = Array("BRAF cfDNA", "EGFR T790")

digRPT = Application.Sum(Application.CountIfs(Range("C3:C200"), "*RPT*", Range("B3:B200"), digassay))

DigVal = Application.Sum(Application.CountIf(Columns("B"), digassay))

DigVal = DigVal - digRPT

    If DigVal > 0 Then
        Sheet17.Shapes("DigExtract").TextFrame.Characters.Text = DigVal
    Else
        Sheet17.Shapes("DigExtract").TextFrame.Characters.Text = 0
    End If
    
DigDilute = Application.Sum(Application.CountIfs(Range("L3:L200"), "<>" & "", Range("B3:B200"), digassay))

    If DigDilute > 0 Then
        Sheet17.Shapes("DigPCR").TextFrame.Characters.Text = DigDilute
        DigVal = DigVal - DigDilute
        Sheet17.Shapes("DigExtract").TextFrame.Characters.Text = DigVal
    Else
        Sheet17.Shapes("DigPCR").TextFrame.Characters.Text = 0
    End If
    
DigDrop = Application.Sum(Application.CountIfs(Range("M3:M200"), "<>" & "", Range("B3:B200"), digassay))

    If DigDrop > 0 Then
        Sheet17.Shapes("DigDilution").TextFrame.Characters.Text = DigDrop
        DigDilute = DigDilute - DigDrop
        Sheet17.Shapes("DigPCR").TextFrame.Characters.Text = DigDilute
    Else
        Sheet17.Shapes("DigDilution").TextFrame.Characters.Text = 0
    End If
    
DigAnalyze = Application.Sum(Application.CountIfs(Range("N3:N200"), "<>" & "", Range("B3:B200"), digassay))

    If DigAnalyze > 0 Then
        Sheet17.Shapes("DigAnalysis").TextFrame.Characters.Text = DigAnalyze
        DigDrop = DigDrop - DigAnalyze
        Sheet17.Shapes("DigDilution").TextFrame.Characters.Text = DigDrop
    Else
        Sheet17.Shapes("DigAnalysis").TextFrame.Characters.Text = 0
    End If
    
DigAna = Application.Sum(Application.CountIfs(Range("AC3:AC200"), "<>" & "", Range("B3:B200"), digassay))

    If DigAna > 0 Then
        Sheet17.Shapes("DigAnalysis").TextFrame.Characters.Text = DigAnalyze - DigAna
    End If
'*********************************************************************************************************
'Methylation Tests
'*********************************************************************************************************
metassay = Array("MGMT", "MLH1")

methRPT = Application.Sum(Application.CountIfs(Range("C3:C200"), "*RPT*", Range("B3:B200"), metassay))

MetVal = Application.Sum(Application.CountIf(Columns("B"), metassay))

MetVal = MetVal - methRPT

    If MetVal > 0 Then
        Sheet17.Shapes("MethMet").TextFrame.Characters.Text = MetVal
    Else
        Sheet17.Shapes("MethMet").TextFrame.Characters.Text = 0
    End If

MethPCR = Application.Sum(Application.CountIfs(Range("X3:X200"), "<>" & "", Range("B3:B200"), metassay))

    If MethPCR > 0 Then
        Sheet17.Shapes("MethPCR").TextFrame.Characters.Text = MethPCR
        MetVal = MetVal - MethPCR
        Sheet17.Shapes("MethMet").TextFrame.Characters.Text = MetVal
    Else
        Sheet17.Shapes("MethPCR").TextFrame.Characters.Text = 0
    End If
    
MGMT = Array("MGMT")
MLH1 = Array("MLH1")

MGMTPCR = Application.Sum(Application.CountIfs(Range("G3:G200"), "<>" & "", Range("B3:B200"), MGMT))
MLH1Load = Application.Sum(Application.CountIfs(Range("Z3:Z200"), "<>" & "", Range("B3:B200"), MLH1))

totsmeth = MGMTPCR + MLH1Load

    If MGMTPCR > 0 Then
        Sheet17.Shapes("MethClean").TextFrame.Characters.Text = MGMTPCR
        MethPCR = MethPCR - totsmeth
        Sheet17.Shapes("MethPCR").TextFrame.Characters.Text = MethPCR
    Else
        Sheet17.Shapes("MethClean").TextFrame.Characters.Text = 0
    End If
    
MGMTClean = Application.Sum(Application.CountIfs(Range("Y3:Y200"), "<>" & "", Range("B3:B200"), MGMT))

    If MGMTClean > 0 Then
        Sheet17.Shapes("MethCleave").TextFrame.Characters.Text = MGMTClean
        MGMTPCR = MGMTPCR - MGMTClean
        Sheet17.Shapes("MethClean").TextFrame.Characters.Text = MGMTPCR
    Else
        Sheet17.Shapes("MethCleave").TextFrame.Characters.Text = 0
    End If
    
MGMTLoad = Application.Sum(Application.CountIfs(Range("Z3:Z200"), "<>" & "", Range("B3:B200"), MGMT))
analysismeth = MLH1Load + MGMTLoad

    If analysismeth > 0 Then
        Sheet17.Shapes("MethAnalysis").TextFrame.Characters.Text = analysismeth
        MGMTClean = MGMTClean - MGMTLoad
        Sheet17.Shapes("MethCleave").TextFrame.Characters.Text = MGMTClean
    Else
        Sheet17.Shapes("MethAnalysis").TextFrame.Characters.Text = 0
    End If
    
MethAna = Application.Sum(Application.CountIfs(Range("AC3:AC200"), "<>" & "", Range("B3:B200"), metassay))

    If MethAna > 0 Then
        Sheet17.Shapes("MethAnalysis").TextFrame.Characters.Text = analysismeth - MethAna
    End If

'*********************************************************************************************************
'PyroSequencing Tests
'*********************************************************************************************************
pyrassay = Array("EGFR Pyro", "KRAS", "NRAS", "BRAF")

pyroRPT = Application.Sum(Application.CountIfs(Range("C3:C200"), "*RPT*", Range("B3:B200"), pyrassay))

PyrVal = Application.Sum(Application.CountIf(Columns("B"), pyrassay))

PyrVal = PyrVal - pyroRPT

    If PyrVal > 0 Then
        Sheet17.Shapes("PyroPCR").TextFrame.Characters.Text = PyrVal
    Else
        Sheet17.Shapes("PyroPCR").TextFrame.Characters.Text = 0
    End If
    
pyrpyro = Application.Sum(Application.CountIfs(Range("G3:G200"), "<>" & "", Range("B3:B200"), pyrassay))

    If pyrpyro > 0 Then
        Sheet17.Shapes("PyroMark").TextFrame.Characters.Text = pyrpyro
        PyrVal = PyrVal - pyrpyro
        Sheet17.Shapes("PyroPCR").TextFrame.Characters.Text = PyrVal
    Else
        Sheet17.Shapes("PyroMark").TextFrame.Characters.Text = 0
    End If
    
pyroanalysis = Application.Sum(Application.CountIfs(Range("AB3:AB200"), "<>" & "", Range("B3:B200"), pyrassay))
        
    If pyroanalysis > 0 Then
        Sheet17.Shapes("PyroAnalysis").TextFrame.Characters.Text = pyroanalysis
        pyrpyro = pyrpyro - pyroanalysis
        Sheet17.Shapes("PyroMark").TextFrame.Characters.Text = pyrpyro
    Else
        Sheet17.Shapes("PyroAnalysis").TextFrame.Characters.Text = 0
    End If
    
PyAna = Application.Sum(Application.CountIfs(Range("AC3:AC200"), "<>" & "", Range("B3:B200"), pyrassay))

    If PyAna > 0 Then
        Sheet17.Shapes("PyroAnalysis").TextFrame.Characters.Text = pyroanalysis - PyAna
    End If
    
    
'Set the active cell address for copying of cells to finished and DT tracking
a = ActiveCell.Address(0, 0)

    On Error GoTo HANDLER
    'Creating a datetime tracking process for the taskbook,
    'this will set a column on the same row 52-54 cells away as a timestamp of when the cell was edited.
    'Column=2 target is for assay entered
    If Target.Column = 2 And Target.Value <> "" Then
        Application.EnableEvents = False
        Target.Offset(0, 2) = Format(Now(), "mm/dd/yyyy hh:mm:ss")
        Target.Offset(0, 54) = Format(Now(), "mm/dd/yyyy hh:mm:ss")
        Target.Offset(0, 52) = Target.Value
        Application.EnableEvents = True
        
    'Column=3 target is for the run number entered, should be a run name not time value
    ElseIf Target.Column = 3 And Target.Value <> "" Then
        Application.EnableEvents = False
        Target.Offset(0, 52) = Target.Value
        Application.EnableEvents = True
        
    'All other columns excluding 2 & 3 will be a datetime entered offset by 52 cells
    ElseIf Target.Column <> 4 And Target.Value <> "" Then
        Application.EnableEvents = False
        Target.Offset(0, 52) = Format(Now(), "mm/dd/yyyy hh:mm:ss")
        Application.EnableEvents = True
    End If
    
HANDLER:

    'This handles the copying of finished rows when a value is entered into the run complete column.
    'The first section containing text information is copied to Completed tab
    'The second selection is the datetime objects copied to the Completed DT tab.
    On Error GoTo HANDLE_1:
    If Intersect(Target, Columns("AF:AF")) Is Nothing Then Exit Sub
    Application.EnableEvents = False
        If Target.Address <> "" Then
            Range("A3:ZZ200").Columns.Hidden = False
            Range(Cells(Target.Row, "A"), Cells(Target.Row, "AG")).Copy Sheets("Completed").Range("A" & Rows.Count).End(xlUp).Offset(1, 0)
            
            Range(Cells(Target.Row, "BA"), Cells(Target.Row, "CZ")).Copy
            Sheets("Completed DT").Range("A" & Rows.Count).End(xlUp).Offset(1, 0).PasteSpecial Paste:=xlPasteValues
            
            Range(Cells(Target.Row, "A"), Cells(Target.Row, "CZ")).EntireRow.Delete
    Application.EnableEvents = True
        Call ThisWorkbook.TestSelectionsAndFiltering
    End If
HANDLE_1:
    
End Sub
'Scroll to last row in completed log
'Datetime object tracking
